#Composite Project

-Projects saved as single XML file, which makes it difficult to share among other testers, working on same project.
SEtting "Composite Project" to TRUE, the project is separated into multiple components.
-Environments can change endpoints, database connections, properties and more
-Event handlers can customize all aspects of API interactions/applies custom behavior to API calls

About XML
	Designed to store and Transport Data
	Has no Pre-Defined taga - tags are complete customizeable
	XML separates information from Presentation
About JSON
	Data Representation format - similar to XML
	

Quiz
Soap ui stores its project in XML
What is true about workspace
	You may only need one
	Workspaces does not stored in CSV files
When defining different configurations with different endpoints,
	Environment feature is use
What is reason to use an Event handler
	To apply custom behavior to all API Calls in project
Properties are best thought of as Variables
What is good way to share projectgs with colleagues
	Composite projectsa
Why soup ui project files get so big
	because they often contain complete WSDL
Reason to customize yoour proxy settings
	To work with your firewall
Where can user view Global Properties
	From File->Preference menu

Jetty - Java HTTP server and Java Servlet container. It is often used for machine to machine communications.
Jetty is Web Server which is know to be portable, lightweight, robust, flexible, extensible and easy to integrate. 

#Manual API Interaction

Before interact/create Test Suites, first experiment with your Services and APIs
	Goal is to Validate basic behavior
Creating New Project
	Definitions - Examines resource and automatically determines types to use
	EndPoint - Test live API with specific method
	Integration - Allows to test Third party APIs
	Discover API - records HTTP/HTTPS traffic to API. Uses external client applications or browsers record clicks and behaviors
		Like testing Web sites, interacts with buttons

Endpoint Explorer - allows quick way to Test APIs with various methods, submit header, and receive Response all in one window
	You can also create Test Case right from Endpoint Explorer

#Provides sample data automatically instead of question marks - when pulling WSLD file - From "Definition" from Create NEw Project
How does it knows which values to use as sample?
	Its getting all information from WSDL file, Data types, restrictions to decite what is permissible.
#REST, all it needs is Sample call (GET, PUT...)
#Soap request can validate WSDL fiel via FORM if its properly filled out with valid information.
#WSDL determines UI behavior for Web Service
#Soapui uses WSDL to determine how to configure requests
#Soap allows to Validate the REQUEST before submitting/Sending
#Soap mostly deals with *Web Services*
#Always good practice to have Positive & Negative Assertions

Quiz
How can soap ui determine what default values to generate / Also soapui know how to validate a form of data that you have filled in.
	By consulting the WSDL
Why is it good that soapui can render JSON as XML
	It makes XPath assertions possible
Want to see what you send on the wire to your service? where should u look
	Raw View
Where you find HTTP header content that returned from service
	Response tab, Header
WSDL is for Web Services. Analogy for REST Api
	Swagger
Instruct soapui to fill in sample values for request
	At Global Preference
What is least information you need to create project that works with REST api
	A sample call to the request

#TestSuites are container of functional tests (TestCases)
#TestSuites can be run sequentially or in parallel.
#TestSuites can be automatically generated and can be implemented into different environment.


Quiz
Why might you want to run TestSuite from command line
	Integration with automated test tool
What do you need to create TestSuite containing REST APIs
	A Sample call to Api
You only want to run 2 out of 3 TestSuite. What to do
	Disable the TestSuite do not want to run
What is utility that runs TestSuites from command line
	TestRunner.bat

#TestCase
-Have two main settings	- preffered unchecked
	Abort test if an error occur
	Fail TestCase if it has failed TestSteps
Debugger lets you pause and analyze  your TestCase

Quiz
Best analogy for TestCase
	Functional test
Building Blocks that compose TestCase
	TestSteps
If Soap created TestCase, what type step does it usually include to start
	A call to API
Which two types soapui tests taht can be generated from testcase
	Load Test & Security scan
YOu want to pause Testcase to check properties. Easy way to proceed
	Use debugger to insert a breakpoint
What determines to run testcase to completion, despite any problems
	Abort on Error Setting

#TestStep
TestSteps Runs in sequence
Individual steps can be disabled
	Either Programmatically 
	Either User Interface
Develope a good functional TestCase and then choose the right component (TestSteps) for the job

$Categories: - Creating project
Protocol = communicate with a service/API = TestSteps
Flow Control = Determine how the TestCase will be processed - Flow/Structure of TestSteps/Properties
Data = Support input, output, data generation - Data Storage/Data Source

Protocol: Responsible for transmitting and receiving messages to/from APIs
			Soapui automatically determines the right TestStep for API 
			Capable of transmitting & receiving headers (HTTP/Soap/JMS/JDBC)
			Capable to send/receive attachments
			Commonly evaluated by assertions
TestSteps:
	Soap Request = Use it to interact with Web service
	REST Request = Communicate with REST API using methods GET, POST, PUT ...
	JDBC Request = Interact with any database that has JDBC driver - Allows to write SQL
	JMS Request = Transmit a message to JMS message bus using either soap or rest protocol
Protocol TestSteps interact with APIs
TestStep name states the targeted protocol
TestSteps can include Headers and attachments
Assertions are assigned to protocol TestSteps

Quiz
Verify information has been registered in Database. Which request to use
	JDBC request 
Which TestStep let you works with Adobe Flash or Flex Service
	AMF Request
Need to test Different protocols than soapui offers. What to do
	Extend soapui with new protocol handler


#Flow Control of TestSteps
ConditionGoto used to branch TestCase workflow
Delay Step pauses for specific period of time
Manual Step pauses TestCase indefinitely
Multiple assertions allowec per TestStep

Quiz
What is necessary for ConditionGoTo statement to work
	One boolean condition
You have separate functional test that may need to launch in different circumstances
	Condition GoTo and Run TestCase
TestStep that can automatically be generated by soapui
	Property Transfer
What is good reason to use Assertions TestStep
	YOu want to apply boolean logic to multiple assertions
TestStep least to be used to run from start to finish with no need for branching
	ConditionGoTo
What happens if TestCase is invoked from command line yet contains Manual TestStep
	Soupui will skip the manual teststep

#Data
All DataSource need a DataSource Loop
Create random data using DataGenerator  DataSource
DataSink can export single property as well as Entire Response message

Quiz
What supports Data Generation within soapui
	List
	
#Assertions
Useful to decide whether a test passes or fail
Can be placed into separete/own TestSteps
Determines whether service has met certain criteria
Not all assertions can be applied to type of protocol TestSteps
Assertions are to be assigned to any protocol oriented teststep

Contains - making sure that certain value is present *anywhere* in the Response 
XPath Match - checks particular part of message in XML to see if value is present or not
JSONPath Count Match = Validates to Number of instances in response are present 
JSONPath Existence Match = Node and JSON response is present 
	(ex: timestamp = 12202020) - "timestamp" is Node/"12202020" is Value
JSONPath Match = Validates the Value for Node to match Value in Response
	User expects certain value will exist at a *particular* node in response 
Message Content Assertoins - checks for node (value) that is dynamic (changes) or Static (dont change) in the response 
	Lets user skip specific fields when evalueting a response
	Allows to validate specific nodes in XPath by selecting options to validate
	Validate multiple messages/Values
Equal = When you expect the response to exactly match the defined value (great for Text based info)
	Can compare entire response with predefined values
Equals (Binary) = great for evaluating multimedia service responses (ex: media, images, audio, video)


Quiz
Type of TestStep has assertions
	Protocol
Approach soapui uses for pattern matching on contains and not contains assertions
	Regular expressions (regex)
Type of assertion requires more knowledge of scripting/prograomming
	XQuery Match

#Other Assertions
Valid HTTP status Code = validates proper code return (200, 404). Validates HEADER

Invalid HTTP status code = validates unwanted/error status code are present (400, 401, 402, 403, 404, 500, 501)

Schema Complience = tells if response from the Web Service matched its XML Schema
	Validates response message to comply with associated WSDL or WADL schema definition (Used in REST too)
	If assertion failed, look at "WSDL Content" file itself
	Validates SOAP Web Service response matching its Contract 

SOAP Fault = Validates last received message is soap fault. Applicable only to Soap teststep
	Checks for Standard Web Service errors
	Not SOAP Fault = confirms that no errors occurred
Schema Assertion = Schema Compliance - Validates Response Structure 
	- Schema File contains (.xsd) extension
	- Everything about in Response is mentioned in Schema File (.xsd)
WS-Addressing - checks for routing headers


Quiz
You expect call to your Web Service to produce standardized error. Which assertion to use
	SOAP Fault
What part of message does Invalid HTTP code assertion checks
	The Header
Assertion Soapui uses to see if Web Service response matches its contract
	Schema Compliance
Which assertion checks to see if proper routine headers are in place
	WS-Addressing
Which assertion is relevant for REST Api
	Schema Compliance
For Web Service, what two things Schema Compliance compares
	Response and WSDL

#More Assertions
Service Level Agreement (SLA) = Measures response time for call service (timing)(Applicable for ALL environment)
	Confirma how quickly results are returned
	5000 = 5 seconds
	10000 = 10 seconds
	500 = 500 miliseconds
	Used in Delay Test Step 
Sensitive Information Exposure = Security - validates no sensitive information is returned in Response 
	soapui Preferences includes library of global sensitive information that should not be visible to others
	Measures in Tokens
	Making sure its not returning any sensitive information 
Script Assertion - if Assertion you need is not in readyapi build in, Script allows to build custom assertions
	Must include Boolean true or false value
	Whenever script validates, it will process as an assertion
Assertion TestStep = allows to apply assertions to individual teststeps (Combines assertions)
	Allows to apply assertions to REQUEST 
	AND/OR Boolean Conditions are allowed to be used in this assertion teststep
JDBC and JMS Assertions both check that relevant headers and status codes are received


HTTP Header Equals - Validates Header assertion. Validates the value its expecting from Header
HTTP Header Exists   - Value in Header object might change like Date, Time. This validates that Value in Header Object actually exist in Header

Quiz
Issue a call to *database*, ensure there is no errors. what assertions use
	JDBC
Attacker might learn about your application server technology. What assertion
	Sensitive Information Exposure
Assertion does not offer exact assertion that you need. What to do
	Write a script assertion
What language is used to write script assertions
	Groovy
You want to Group all Assertions and process them at one time. What assertion
	Use the Assertions Teststep
Two Boolean conditions that can be used in Assertion Teststep
	And, Or
You are interacting with message Bus, which assertion targets type of communication
	JMS
How can you easily share your custom-built security tokens with colleagues
	Export your global sensitive information tokens to a file

#Data-Driven Testing
Test with Real Data
	Measure realistic performance
	Determine database delays (latency)
	Properly exercise business logic - when using variety of data, you can see distinct performance and bugs
	Using same amount of data, over and over, may result in giving cached results which could be wrong results
DataSource Types:
	Grid = Simple in-lined row and column-based datasource - Create in-lined test data
		Great for quick testing but not for extensive usage
	File = Meant for plain text files (CSV, TXT)
		Individual Properties or entire message from file can be extracted
		File can contain JSON or XML and used as fields
	Excel = uses speardsheet to store test information
		Worksheet and starting cell can be specified for use
		Usually first row is skipped cuz its a title
	Directory = Transmit a directory of files to API, one by one
		Meaning, Folder containing many excel or other type files with Data info to Test 
		Requires creating a property to hold file contents
		Great for regression testing
	Data Connection/JDBC = interacts with database
		Ideal for VERY large Data Set
		Can create properties for you in DataSource
		SQL knowledge is required
	Groovy = Enables data generation directly from script
		Meant for situations of highly specific, often-dynamic requirements
		If no needed Data Type found, Scripting would be best bet
	JSON = Designed for taking JSON output from one API call and feeding it into another
		Same option as for Property Transfer
	Data Generator = Creates randomized data  - can be on the fly
		Lets you create Test Data within soapui itself
		Allows to combine data with generated values
Data-Driven Testing requires data and defined properties from DataSource which combines with DataSource Loop
JDBC drivers enable RDBMS connections
Property names can be created automatically from relational database

Quiz
soapui able to create your properties for you with DataSource type?
	Data Connection 
Which DataSource lets you create test data within soapui
	Data Generator
What is Menu Command to associate information with API calls
	Get Data
Test Data is in COMMA separated format. What right DataSource to use
	File
You have millions of test records to send to API. Which DataSource is best
	Data Connection
Need to create and transmit RANDOM number. Which way is easy
	Use Data Generator Data Source
How can easily skip over first row of spreadsheet that contains column names
	Configure DataSource to start in row 1
You've installed new brand of database. What does soap need to connect to it
	a JDBC driver
	
	
#Virtual Services
Sometimes user can't connect to a service to test it. OR Service hasn't been written yet, OR service has bugs but can't quiet test yet
^ This is why you need Virtual Services. 
It lets you build robust tests
It create mock service
		
#Mock Services and Responses
Mock service response are completely configurable
Responses are usually hard coded. NO matter how many times you send request with different data,
	youll get same response.
	It can Write Scripts to make it more dynamic
Responses can be completely generated during runtime
Responses can be defined for given operation
	Many/Multiple responses can be created

#Routing Options
	Script / Sequence / Query_match / Xpath / RANDOM
#Scripting and Mock Services
	There are several places to where you can write scripts for mock services
		Start script / Stop Script / OnRequest Script / AfterRequest Script / Inline script
#Deploy Mock Services
	On your own computer
	On a shared server
	Users can connect to YOUR mock service even if its on your PC, As long as the port is open for access
#Invoking Mock Service
	To call mock service, you need endpoint
	Multiple users can work with single Mock Service
	Mock service can tell you which user invoking it
	
#ServiceV - Setup
	Covers both Soap and Rest services
	Incoming messages and outgoing responses
	YOu can configure how responses can be dispached - Script / Sequence / Query_match / Xpath / RANDOM
	You can define response content, write scripts, configure datasources, and write assertions 
#ServiceV - Behavior - config 
	ability to fine to latency, hardware capacity, threading profile, bandwith
	Define error responses to match expected verses Responded
#ServiceV - Transaction Log
	It keeps all incoming and outgoing messages
#ServiceV - DataSources
	Make it possible to assemble responses using virtual limitless set of data taking from spreadsheets, files, databases
#ServiceV - Coverage
	Works for Web Services 
	Determines how thoroughly incoming requests sent outgoing responses are covering the services WSDL contract
Virtual Services can be created for SOAP and REST
Jetty engine runs virtual services
Multiple virtual reponses can be defined
Virtual services may be deployed to central site
Scripting lets you create extensive business logic for virtual services

Quiz
What type of service will soapui generate from url <http//highling.com/:80/meal/xml/customer?locator=645325&type=child>
	REST
What is difference between SOAP and REST virtual API 
	SOAP virtual API require WSDL; REST virtual API require Swagger or Sample API call
Soapui uses which technology to host Virtual API 
	Jetty
What is easy way to simulate error message from SOAP virtual API 
	Define SOAP Fault message
What must you adjust to invoke virtual Api
	the Endpoint for your request
What level of support you need from Developers to setup Soap virtual API 
	WSDL for API 

#Security
Soapui support these technieques
HTTPS
HTTPS with Client Authentication
WS-Security UsernameToken
WS-Security TimeStamp
WS-Security XML Encryption
WS-Security XML Digital Signature
SAML
#Soapui security wizard contain build in attacks. 
	Designed to cause service to Crash
	Designed to return details about its implementations for more targeted attacks
	 or Both 
	 My job is to find volnurable spots and Alert Development team to fix the gaps
#Security Wizard has two main tests categories
	(1)Tests that sends damaged or confusing information to your service
		Communicating wrong data types
		Going beyond normal boudaries for information (such as sending Big numbers to elements expecting Small numbers)
		Transmitting enormous as well as Damaged XML documents
		Sending Randomized data to your service
		
	(2)Tests that attempt to run service-side code
		Attempt to run SQL/Xpath or other scripts 
Good Security strategy would include both of these (1 and 2)

#Security Tests
	Invalid types = send the wrong type of information
	XPath Injection = Attempt to execute server-side XPath
	Boundary Scan = Test Corner Conditions
	SQL Injection = Attempt to execute server-side SQL
	XML Bomb = Submit a massive XML document
	Malformed XML = Send in corrupted XML
	Malicious Attachment = UPload a virus or executable
	Cross Site Scripting = Test for exposed message parameters
	Fuzzing Scan = Embed random data in valid messages
#Assertions and Security
	Default Assertions
	- Sensitive Information Exposure 
	- Schema Compliance
But you can apply all assertions to Security Scan 
	However, not all assertions could be relevant to security

#Best Practice for Security 
- Start Small: one operation at a time, with few parameters
	- One scan at a time: Boundary conditions is great first scan
	- One Assertion at a time: Sensitive Information Exposure is CRITICAL
	- Dont let soapui automatically generate your scans
Security scans can be created from TestCases

Quiz
How does soapui support WS-Security standard
	by recognizing and processing a variety of WS-security headers
What wire protocol implements Security Sockets Layer (SSL)
	HTTPS
Project needs to transmit different security headers to Web Service APIs provided by several partners. 
Each partner uses its own security setting. What to do
	Create and set up multiple WS-Security configurations
Which assertion is most meaningful when using soapui security wizard
	Sensitive information Exposure
What is drawback to letting soapui automatically generate security scans
	An overwhelming amount of error details
An attack that is attempts to run server-side code known
	an injection attack
Which scan will attempt to execute code in your server database
	SQL injection
A security scan that sends string to an element that expects an integer known	
	Invalid Type
Which is best tactic to ensure success with soapui security wizard
	Start with small scan and then build on it as you proceed

------------------	
UDEMY - Learn API & WebService Testing
------------------
# 3 Layers
Front End - (GUI, Presentable Screen/Layer)- JavaScript, CSS, JAVA
Business Logic - (API-Application Programming Interface) - Java, C#, C++, Phyton
Back End - (Database)- My SQL, SQL, Oracle

# APIs are in form of JAVA files (also available in WebService)
	- No need URL
	- No need Web Browser
	- API is in form of JAVA (no need internet, can be tested locally)
# Web Service
	- Reads XML format
	- Available in WebServers
# API is NOT a WebService BUT WebService can be API 
------------
Web Services
------------
1. SOAP - XML,  WSLD file
2. REST - XML, JSON, HTTPS, HTML, (GET, POST etc...) Must have URL Request 
-----------
Web Service is service available over Web or Network, it communicates between 2 machines/Applications
----------------------------------------------
# Web Application - Provides service directly to User - Receives response from Web Server
# Web Service - Provides service to other Programs

# Components of Web Services
	WSDL - Web Service Description Language. 
		- XML based-language that describes  Web Services, how to access and locate them
	UDDI - Universal Description Discovery and Intergration
		- Open internet-based specification, offers directory service for storing information about Web Services
		- Company or Storage Unit where Service Providers store their Services
			- UDDI - Place where ALL Services are Stored/Available 
		- With WSDL - Web Services can be accessed and located
		- ##Service Consumer (Client) uses WSDL to Get/Find Services from UDDI, then WSDL Approves the Service and Client Sends Request to Server
# These are Service Providers - Web Service - Servers - Store their services in UDDI
# These are Service Consumers - Clients - They only send Request and get Response
	- UDDI - Place where Service Cunsumers Finds Service
	- WebService stored in UDDI

### Web Service vs API ###
	WebService ALWAYS need network to operate/Test.BUT API may not need Network to operate/Test
		API can be tested on local machine if Server is located Locally
	WebService can be used by Soap, Rest, XML RPC BUT API can be communicated through other ways like CURL calls/URL
	API can be considered as Web Service BUT ALL Web Service are not API 
	API can be exposed in number of ways like via JAR, DLL files, XML over HTTP, JSON over HTTP - which may not need network

### SOAP vs REST ###	
# SOAP - Simple Object Access Protocol
	- Soap is a Protocol 
	- designed to ensure that programs built on different platforms and programming languages could exchange data easily
	- exchanges messages between applications/systems
	- it uses HTTP protocol to transfer XML messages 
	- Supports XML for data exchange (Request and Response)
	- Heavy Weight cuz it uses WSDL file, also very Slow 
	- WSDL - Web Service definition Language - written in XML format
	- It is VERY Strict for its Standard Rules	
	- Requires MORE bandwidth and resource
	- Defines its own Security
	
# REST - Representational State Transfer 
	- REST is an architectural style
	- designed specifically working with components such as media components, files, objects on a particular hardware device. 
	- Any web service that is defined on the principles of REST can be called RestFul web Service.
	- It uses HTTP verbs/protocol = GET, POST, PUT, etc... to work with required components
	- Uses mostly HTTP rather than HTTPS - cuz HTTPS is more enctypted, not fur user eyes, but HTTP is easier to aquire info 
		- Allow users to view web pages, easily to communicate between different systems. 
	- HTTP disadvantage - Information flows between server to browser can be easily stolen. 
	- HTTPS uses SSL (Secure Sockets Layer) certificate which helps to secure encrypted connection between server and browser. 
	- REST does not define too much standard unlike SOAP 
	- Requires LESS bandwidth and resource
	
# Advantages of REST over Soap
	REST supports multiple format to exchange data between 2 machines/Application
	REST services are faster than SOAP 
	Less data transfer between machines 
	SOAP is protocol, REST is set of guidelines which described how client should interact with server
	SOAP can be accessed thru WSDL only BUT REST can be accessed thru WADL or URI
	
----------------------------------------
# Tools available to use for API
	API - no internet required, can be tested locally (available in Jars file)
	WebServices - Requires Internet, test by sending HTTP request (URL)
	Soapui
	POSTMAN
	Katalon - Testing Web Services
	Assertible
	Apigee
	Apache JMeter - performance testing
	REST-Assured - complete Automation
	Tricentis
	Karate
--------------------------------
# API/Web Service Testing Process
	- API Specification Review - review API specifications, documentation from test perspective
	- Test Specificaton Development - document deals with test conditions and expected results 
	- Test Framework Development - choose tools to use, JMeter, SOAPUI, REST, other resources
	- Test Case Development - code/create test cases
	- Test Execution and Report to Dev or Client

# URI and URL (Uniform Resource Identifier vs Uniform Resource Locator)
URL Link contains of: 
	Domain: www.michaelcropper.com/
	URI: /seo-tools/uri-encoder-decoder-tools-for-seo?
	Query String: name=value&lastName=value&Address=value
# Part of URL = Domain + URI + Query String

Domain: Physical server where website is hosted
URI: Identifier which maps to file on your server - Directory/Folder/ Where that folder/File is Located inside Server
Query String: Part of GET, POST, PUT request to pass in values to customise output (Parameters)
-----------------------------------------
# HTTP Request Contains
 URI
 HEADER
 Payload - Data in JSON, XML format (Data send or received)
	ex: POST - create FirstName, LastName, Address, Location - includes in Payload

# HTTP Response Contains
 Status Code - 200 OK
 Response Payload
 String Message "Successfull"
 
Example: 
POST Call: via JSON, XML or other form
AccountID=1
AccountName="TOM"
Address="London"

GET Call: URL -> http://api/service/account/1
Parameters
Query Parameters
HEADER

# Status Codes (Http code): 
200 --------> (OK)GET Successfull
201 --------> (Created) POST Successfull
202 --------> (Accepted)POST Data Accepted 
200/201 ----> PUT Successfull (201 - in case new Resource created)
204/200 ----> DELETE Successfull
204 --------> No Content (You(PUT-Update) Date to server but there is no Data to Return. Must use GET)

400(s) Code means Something wrong with Data (input), Data might have changed by Devs, May need to check with Devs 
400 - Bad Request -------------- Invalid Request 
401 - UnAuthorized ------------- Request did not include Authentication token/or Token was expired
403 - Forbidden ---------------- Client do NOT have permission to access resource
404 - Not Found ---------------- Requested resource NOT found
405 - Method NOT Allowed ------- HTTP Method not Supported 
409 - Conflict

500 - Internal Server Error ----- 500(s) Code means Something Wrong with Server
502 - Bad Gateway
503 - Service Unavailable
504 - Gate Timeout

# Method
	HEAD - Fetch (GET) only HEADER & BODY data from the application
		Header includes - Data time, format, encryption and more...
	OPTIONS - Finds which REQUESTS METHODS  server supports 
		(In RESPONSE, you'll get this: Allow: OPTIONS, GET, HEAD, POST...)
		When you get URL, you want to know which METHODS that URL supports 
	TRACE - Used for Debugging. This method will Loop - Back, meaning return same message as in REQUEST 
--------------------------------------------------------------------
Jetty is a Web Server, similar to Tomcat server, made for Web Applications, Web sites
	Java HTTP Web server and Java Servlet Container
	Jetty is a Servlet container and Web Server which is known to be portable, lightweight, robust, flexible, easy to integrate
	Jetty can be deployed as a standalone server and also can be embedded in an existing application.
Jasper Soft - Creates Advanced/Detailed Report. Allows user to Customize in any form or shape, Convert into PDF file and Share with steakholders. 
	Works and follows the guidelines of REST method. 
Saxon - collection of tools for processing XML documents. Main Component is XSLT processor. 
	Saxon offers XQuery extension, also, XML Schema, XPath
	Use Saxon API calls to navigate directly to other nodes in the document, either directly, or using XPath expressions
	Saxon can also be used as Java Library without making XSLT stylesheets.
Hermes - Hermes has implemented web services to communicate with external applications. 
	Advantage of using WEB SERVICES are to reduce coupling between external applications and Hermes - 
	And to allow external applications to integrate Hermes seamlessly using any programming languages that support sending SOAP Messages
----------------------------------------------------------------
# Query VS Path Parameter Resource (both GET)

(URI)
Path Parameter - used to identity a specific resource or resources - To identify specific customer, User will use "CustomerID" 
	ex: GET hhtp://localhost:8899/mysql/customers/456574856 - specific customerID number
Query Parameter - used to sort/filter those resources 
	ex: GET http://localhost:8899/mysql/customers?country=London - Filtering out customers from London
		"Country" = Key
		"London" = Value       After ? it is Parameters 
		Query Parameters in Results - usually includes [] - as an Array 
---------------------------------------------------------------------